/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.hackathon.services.kinesisanalytics;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class EventData extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 2130621132763182371L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"EventData\",\"namespace\":\"com.hackathon.services.kinesisanalytics\",\"fields\":[{\"name\":\"id\",\"type\":[\"string\",\"null\"]},{\"name\":\"account_id\",\"type\":[\"string\",\"null\"]},{\"name\":\"bytes\",\"type\":[\"long\",\"null\"]},{\"name\":\"start\",\"type\":\"int\"},{\"name\":\"end\",\"type\":\"int\"},{\"name\":\"version\",\"type\":[\"int\",\"null\"]},{\"name\":\"interface_id\",\"type\":[\"string\",\"null\"]},{\"name\":\"srcaddr\",\"type\":[\"string\",\"null\"]},{\"name\":\"dstaddr\",\"type\":[\"string\",\"null\"]},{\"name\":\"srcport\",\"type\":[\"string\",\"null\"]},{\"name\":\"dstport\",\"type\":[\"string\",\"null\"]},{\"name\":\"protocol\",\"type\":[\"int\",\"null\"]},{\"name\":\"packets\",\"type\":[\"int\",\"null\"]},{\"name\":\"action\",\"type\":[\"string\",\"null\"]},{\"name\":\"log_status\",\"type\":[\"string\",\"null\"]},{\"name\":\"vpc_id\",\"type\":[\"string\",\"null\"]},{\"name\":\"subnet_id\",\"type\":[\"string\",\"null\"]},{\"name\":\"instance_id\",\"type\":[\"string\",\"null\"]},{\"name\":\"tcp_flags\",\"type\":[\"int\",\"null\"]},{\"name\":\"type\",\"type\":[\"string\",\"null\"]},{\"name\":\"pkt_srcaddr\",\"type\":[\"string\",\"null\"]},{\"name\":\"pkt_dstaddr\",\"type\":[\"string\",\"null\"]},{\"name\":\"meta_s3_file\",\"type\":[\"string\",\"null\"]},{\"name\":\"meta_account_no\",\"type\":[\"string\",\"null\"]},{\"name\":\"meta_region\",\"type\":[\"string\",\"null\"]},{\"name\":\"meta_account_name\",\"type\":[\"string\",\"null\"]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<EventData> ENCODER =
      new BinaryMessageEncoder<EventData>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<EventData> DECODER =
      new BinaryMessageDecoder<EventData>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<EventData> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<EventData> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<EventData> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<EventData>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this EventData to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a EventData from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a EventData instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static EventData fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private java.lang.CharSequence id;
  private java.lang.CharSequence account_id;
  private java.lang.Long bytes;
  private int start;
  private int end;
  private java.lang.Integer version;
  private java.lang.CharSequence interface_id;
  private java.lang.CharSequence srcaddr;
  private java.lang.CharSequence dstaddr;
  private java.lang.CharSequence srcport;
  private java.lang.CharSequence dstport;
  private java.lang.Integer protocol;
  private java.lang.Integer packets;
  private java.lang.CharSequence action;
  private java.lang.CharSequence log_status;
  private java.lang.CharSequence vpc_id;
  private java.lang.CharSequence subnet_id;
  private java.lang.CharSequence instance_id;
  private java.lang.Integer tcp_flags;
  private java.lang.CharSequence type;
  private java.lang.CharSequence pkt_srcaddr;
  private java.lang.CharSequence pkt_dstaddr;
  private java.lang.CharSequence meta_s3_file;
  private java.lang.CharSequence meta_account_no;
  private java.lang.CharSequence meta_region;
  private java.lang.CharSequence meta_account_name;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public EventData() {}

  /**
   * All-args constructor.
   * @param id The new value for id
   * @param account_id The new value for account_id
   * @param bytes The new value for bytes
   * @param start The new value for start
   * @param end The new value for end
   * @param version The new value for version
   * @param interface_id The new value for interface_id
   * @param srcaddr The new value for srcaddr
   * @param dstaddr The new value for dstaddr
   * @param srcport The new value for srcport
   * @param dstport The new value for dstport
   * @param protocol The new value for protocol
   * @param packets The new value for packets
   * @param action The new value for action
   * @param log_status The new value for log_status
   * @param vpc_id The new value for vpc_id
   * @param subnet_id The new value for subnet_id
   * @param instance_id The new value for instance_id
   * @param tcp_flags The new value for tcp_flags
   * @param type The new value for type
   * @param pkt_srcaddr The new value for pkt_srcaddr
   * @param pkt_dstaddr The new value for pkt_dstaddr
   * @param meta_s3_file The new value for meta_s3_file
   * @param meta_account_no The new value for meta_account_no
   * @param meta_region The new value for meta_region
   * @param meta_account_name The new value for meta_account_name
   */
  public EventData(java.lang.CharSequence id, java.lang.CharSequence account_id, java.lang.Long bytes, java.lang.Integer start, java.lang.Integer end, java.lang.Integer version, java.lang.CharSequence interface_id, java.lang.CharSequence srcaddr, java.lang.CharSequence dstaddr, java.lang.CharSequence srcport, java.lang.CharSequence dstport, java.lang.Integer protocol, java.lang.Integer packets, java.lang.CharSequence action, java.lang.CharSequence log_status, java.lang.CharSequence vpc_id, java.lang.CharSequence subnet_id, java.lang.CharSequence instance_id, java.lang.Integer tcp_flags, java.lang.CharSequence type, java.lang.CharSequence pkt_srcaddr, java.lang.CharSequence pkt_dstaddr, java.lang.CharSequence meta_s3_file, java.lang.CharSequence meta_account_no, java.lang.CharSequence meta_region, java.lang.CharSequence meta_account_name) {
    this.id = id;
    this.account_id = account_id;
    this.bytes = bytes;
    this.start = start;
    this.end = end;
    this.version = version;
    this.interface_id = interface_id;
    this.srcaddr = srcaddr;
    this.dstaddr = dstaddr;
    this.srcport = srcport;
    this.dstport = dstport;
    this.protocol = protocol;
    this.packets = packets;
    this.action = action;
    this.log_status = log_status;
    this.vpc_id = vpc_id;
    this.subnet_id = subnet_id;
    this.instance_id = instance_id;
    this.tcp_flags = tcp_flags;
    this.type = type;
    this.pkt_srcaddr = pkt_srcaddr;
    this.pkt_dstaddr = pkt_dstaddr;
    this.meta_s3_file = meta_s3_file;
    this.meta_account_no = meta_account_no;
    this.meta_region = meta_region;
    this.meta_account_name = meta_account_name;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return account_id;
    case 2: return bytes;
    case 3: return start;
    case 4: return end;
    case 5: return version;
    case 6: return interface_id;
    case 7: return srcaddr;
    case 8: return dstaddr;
    case 9: return srcport;
    case 10: return dstport;
    case 11: return protocol;
    case 12: return packets;
    case 13: return action;
    case 14: return log_status;
    case 15: return vpc_id;
    case 16: return subnet_id;
    case 17: return instance_id;
    case 18: return tcp_flags;
    case 19: return type;
    case 20: return pkt_srcaddr;
    case 21: return pkt_dstaddr;
    case 22: return meta_s3_file;
    case 23: return meta_account_no;
    case 24: return meta_region;
    case 25: return meta_account_name;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = (java.lang.CharSequence)value$; break;
    case 1: account_id = (java.lang.CharSequence)value$; break;
    case 2: bytes = (java.lang.Long)value$; break;
    case 3: start = (java.lang.Integer)value$; break;
    case 4: end = (java.lang.Integer)value$; break;
    case 5: version = (java.lang.Integer)value$; break;
    case 6: interface_id = (java.lang.CharSequence)value$; break;
    case 7: srcaddr = (java.lang.CharSequence)value$; break;
    case 8: dstaddr = (java.lang.CharSequence)value$; break;
    case 9: srcport = (java.lang.CharSequence)value$; break;
    case 10: dstport = (java.lang.CharSequence)value$; break;
    case 11: protocol = (java.lang.Integer)value$; break;
    case 12: packets = (java.lang.Integer)value$; break;
    case 13: action = (java.lang.CharSequence)value$; break;
    case 14: log_status = (java.lang.CharSequence)value$; break;
    case 15: vpc_id = (java.lang.CharSequence)value$; break;
    case 16: subnet_id = (java.lang.CharSequence)value$; break;
    case 17: instance_id = (java.lang.CharSequence)value$; break;
    case 18: tcp_flags = (java.lang.Integer)value$; break;
    case 19: type = (java.lang.CharSequence)value$; break;
    case 20: pkt_srcaddr = (java.lang.CharSequence)value$; break;
    case 21: pkt_dstaddr = (java.lang.CharSequence)value$; break;
    case 22: meta_s3_file = (java.lang.CharSequence)value$; break;
    case 23: meta_account_no = (java.lang.CharSequence)value$; break;
    case 24: meta_region = (java.lang.CharSequence)value$; break;
    case 25: meta_account_name = (java.lang.CharSequence)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'id' field.
   * @return The value of the 'id' field.
   */
  public java.lang.CharSequence getId() {
    return id;
  }


  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(java.lang.CharSequence value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'account_id' field.
   * @return The value of the 'account_id' field.
   */
  public java.lang.CharSequence getAccountId() {
    return account_id;
  }


  /**
   * Sets the value of the 'account_id' field.
   * @param value the value to set.
   */
  public void setAccountId(java.lang.CharSequence value) {
    this.account_id = value;
  }

  /**
   * Gets the value of the 'bytes' field.
   * @return The value of the 'bytes' field.
   */
  public java.lang.Long getBytes() {
    return bytes;
  }


  /**
   * Sets the value of the 'bytes' field.
   * @param value the value to set.
   */
  public void setBytes(java.lang.Long value) {
    this.bytes = value;
  }

  /**
   * Gets the value of the 'start' field.
   * @return The value of the 'start' field.
   */
  public int getStart() {
    return start;
  }


  /**
   * Sets the value of the 'start' field.
   * @param value the value to set.
   */
  public void setStart(int value) {
    this.start = value;
  }

  /**
   * Gets the value of the 'end' field.
   * @return The value of the 'end' field.
   */
  public int getEnd() {
    return end;
  }


  /**
   * Sets the value of the 'end' field.
   * @param value the value to set.
   */
  public void setEnd(int value) {
    this.end = value;
  }

  /**
   * Gets the value of the 'version' field.
   * @return The value of the 'version' field.
   */
  public java.lang.Integer getVersion() {
    return version;
  }


  /**
   * Sets the value of the 'version' field.
   * @param value the value to set.
   */
  public void setVersion(java.lang.Integer value) {
    this.version = value;
  }

  /**
   * Gets the value of the 'interface_id' field.
   * @return The value of the 'interface_id' field.
   */
  public java.lang.CharSequence getInterfaceId() {
    return interface_id;
  }


  /**
   * Sets the value of the 'interface_id' field.
   * @param value the value to set.
   */
  public void setInterfaceId(java.lang.CharSequence value) {
    this.interface_id = value;
  }

  /**
   * Gets the value of the 'srcaddr' field.
   * @return The value of the 'srcaddr' field.
   */
  public java.lang.CharSequence getSrcaddr() {
    return srcaddr;
  }


  /**
   * Sets the value of the 'srcaddr' field.
   * @param value the value to set.
   */
  public void setSrcaddr(java.lang.CharSequence value) {
    this.srcaddr = value;
  }

  /**
   * Gets the value of the 'dstaddr' field.
   * @return The value of the 'dstaddr' field.
   */
  public java.lang.CharSequence getDstaddr() {
    return dstaddr;
  }


  /**
   * Sets the value of the 'dstaddr' field.
   * @param value the value to set.
   */
  public void setDstaddr(java.lang.CharSequence value) {
    this.dstaddr = value;
  }

  /**
   * Gets the value of the 'srcport' field.
   * @return The value of the 'srcport' field.
   */
  public java.lang.CharSequence getSrcport() {
    return srcport;
  }


  /**
   * Sets the value of the 'srcport' field.
   * @param value the value to set.
   */
  public void setSrcport(java.lang.CharSequence value) {
    this.srcport = value;
  }

  /**
   * Gets the value of the 'dstport' field.
   * @return The value of the 'dstport' field.
   */
  public java.lang.CharSequence getDstport() {
    return dstport;
  }


  /**
   * Sets the value of the 'dstport' field.
   * @param value the value to set.
   */
  public void setDstport(java.lang.CharSequence value) {
    this.dstport = value;
  }

  /**
   * Gets the value of the 'protocol' field.
   * @return The value of the 'protocol' field.
   */
  public java.lang.Integer getProtocol() {
    return protocol;
  }


  /**
   * Sets the value of the 'protocol' field.
   * @param value the value to set.
   */
  public void setProtocol(java.lang.Integer value) {
    this.protocol = value;
  }

  /**
   * Gets the value of the 'packets' field.
   * @return The value of the 'packets' field.
   */
  public java.lang.Integer getPackets() {
    return packets;
  }


  /**
   * Sets the value of the 'packets' field.
   * @param value the value to set.
   */
  public void setPackets(java.lang.Integer value) {
    this.packets = value;
  }

  /**
   * Gets the value of the 'action' field.
   * @return The value of the 'action' field.
   */
  public java.lang.CharSequence getAction() {
    return action;
  }


  /**
   * Sets the value of the 'action' field.
   * @param value the value to set.
   */
  public void setAction(java.lang.CharSequence value) {
    this.action = value;
  }

  /**
   * Gets the value of the 'log_status' field.
   * @return The value of the 'log_status' field.
   */
  public java.lang.CharSequence getLogStatus() {
    return log_status;
  }


  /**
   * Sets the value of the 'log_status' field.
   * @param value the value to set.
   */
  public void setLogStatus(java.lang.CharSequence value) {
    this.log_status = value;
  }

  /**
   * Gets the value of the 'vpc_id' field.
   * @return The value of the 'vpc_id' field.
   */
  public java.lang.CharSequence getVpcId() {
    return vpc_id;
  }


  /**
   * Sets the value of the 'vpc_id' field.
   * @param value the value to set.
   */
  public void setVpcId(java.lang.CharSequence value) {
    this.vpc_id = value;
  }

  /**
   * Gets the value of the 'subnet_id' field.
   * @return The value of the 'subnet_id' field.
   */
  public java.lang.CharSequence getSubnetId() {
    return subnet_id;
  }


  /**
   * Sets the value of the 'subnet_id' field.
   * @param value the value to set.
   */
  public void setSubnetId(java.lang.CharSequence value) {
    this.subnet_id = value;
  }

  /**
   * Gets the value of the 'instance_id' field.
   * @return The value of the 'instance_id' field.
   */
  public java.lang.CharSequence getInstanceId() {
    return instance_id;
  }


  /**
   * Sets the value of the 'instance_id' field.
   * @param value the value to set.
   */
  public void setInstanceId(java.lang.CharSequence value) {
    this.instance_id = value;
  }

  /**
   * Gets the value of the 'tcp_flags' field.
   * @return The value of the 'tcp_flags' field.
   */
  public java.lang.Integer getTcpFlags() {
    return tcp_flags;
  }


  /**
   * Sets the value of the 'tcp_flags' field.
   * @param value the value to set.
   */
  public void setTcpFlags(java.lang.Integer value) {
    this.tcp_flags = value;
  }

  /**
   * Gets the value of the 'type' field.
   * @return The value of the 'type' field.
   */
  public java.lang.CharSequence getType() {
    return type;
  }


  /**
   * Sets the value of the 'type' field.
   * @param value the value to set.
   */
  public void setType(java.lang.CharSequence value) {
    this.type = value;
  }

  /**
   * Gets the value of the 'pkt_srcaddr' field.
   * @return The value of the 'pkt_srcaddr' field.
   */
  public java.lang.CharSequence getPktSrcaddr() {
    return pkt_srcaddr;
  }


  /**
   * Sets the value of the 'pkt_srcaddr' field.
   * @param value the value to set.
   */
  public void setPktSrcaddr(java.lang.CharSequence value) {
    this.pkt_srcaddr = value;
  }

  /**
   * Gets the value of the 'pkt_dstaddr' field.
   * @return The value of the 'pkt_dstaddr' field.
   */
  public java.lang.CharSequence getPktDstaddr() {
    return pkt_dstaddr;
  }


  /**
   * Sets the value of the 'pkt_dstaddr' field.
   * @param value the value to set.
   */
  public void setPktDstaddr(java.lang.CharSequence value) {
    this.pkt_dstaddr = value;
  }

  /**
   * Gets the value of the 'meta_s3_file' field.
   * @return The value of the 'meta_s3_file' field.
   */
  public java.lang.CharSequence getMetaS3File() {
    return meta_s3_file;
  }


  /**
   * Sets the value of the 'meta_s3_file' field.
   * @param value the value to set.
   */
  public void setMetaS3File(java.lang.CharSequence value) {
    this.meta_s3_file = value;
  }

  /**
   * Gets the value of the 'meta_account_no' field.
   * @return The value of the 'meta_account_no' field.
   */
  public java.lang.CharSequence getMetaAccountNo() {
    return meta_account_no;
  }


  /**
   * Sets the value of the 'meta_account_no' field.
   * @param value the value to set.
   */
  public void setMetaAccountNo(java.lang.CharSequence value) {
    this.meta_account_no = value;
  }

  /**
   * Gets the value of the 'meta_region' field.
   * @return The value of the 'meta_region' field.
   */
  public java.lang.CharSequence getMetaRegion() {
    return meta_region;
  }


  /**
   * Sets the value of the 'meta_region' field.
   * @param value the value to set.
   */
  public void setMetaRegion(java.lang.CharSequence value) {
    this.meta_region = value;
  }

  /**
   * Gets the value of the 'meta_account_name' field.
   * @return The value of the 'meta_account_name' field.
   */
  public java.lang.CharSequence getMetaAccountName() {
    return meta_account_name;
  }


  /**
   * Sets the value of the 'meta_account_name' field.
   * @param value the value to set.
   */
  public void setMetaAccountName(java.lang.CharSequence value) {
    this.meta_account_name = value;
  }

  /**
   * Creates a new EventData RecordBuilder.
   * @return A new EventData RecordBuilder
   */
  public static com.hackathon.services.kinesisanalytics.EventData.Builder newBuilder() {
    return new com.hackathon.services.kinesisanalytics.EventData.Builder();
  }

  /**
   * Creates a new EventData RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new EventData RecordBuilder
   */
  public static com.hackathon.services.kinesisanalytics.EventData.Builder newBuilder(com.hackathon.services.kinesisanalytics.EventData.Builder other) {
    if (other == null) {
      return new com.hackathon.services.kinesisanalytics.EventData.Builder();
    } else {
      return new com.hackathon.services.kinesisanalytics.EventData.Builder(other);
    }
  }

  /**
   * Creates a new EventData RecordBuilder by copying an existing EventData instance.
   * @param other The existing instance to copy.
   * @return A new EventData RecordBuilder
   */
  public static com.hackathon.services.kinesisanalytics.EventData.Builder newBuilder(com.hackathon.services.kinesisanalytics.EventData other) {
    if (other == null) {
      return new com.hackathon.services.kinesisanalytics.EventData.Builder();
    } else {
      return new com.hackathon.services.kinesisanalytics.EventData.Builder(other);
    }
  }

  /**
   * RecordBuilder for EventData instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<EventData>
    implements org.apache.avro.data.RecordBuilder<EventData> {

    private java.lang.CharSequence id;
    private java.lang.CharSequence account_id;
    private java.lang.Long bytes;
    private int start;
    private int end;
    private java.lang.Integer version;
    private java.lang.CharSequence interface_id;
    private java.lang.CharSequence srcaddr;
    private java.lang.CharSequence dstaddr;
    private java.lang.CharSequence srcport;
    private java.lang.CharSequence dstport;
    private java.lang.Integer protocol;
    private java.lang.Integer packets;
    private java.lang.CharSequence action;
    private java.lang.CharSequence log_status;
    private java.lang.CharSequence vpc_id;
    private java.lang.CharSequence subnet_id;
    private java.lang.CharSequence instance_id;
    private java.lang.Integer tcp_flags;
    private java.lang.CharSequence type;
    private java.lang.CharSequence pkt_srcaddr;
    private java.lang.CharSequence pkt_dstaddr;
    private java.lang.CharSequence meta_s3_file;
    private java.lang.CharSequence meta_account_no;
    private java.lang.CharSequence meta_region;
    private java.lang.CharSequence meta_account_name;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.hackathon.services.kinesisanalytics.EventData.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.account_id)) {
        this.account_id = data().deepCopy(fields()[1].schema(), other.account_id);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.bytes)) {
        this.bytes = data().deepCopy(fields()[2].schema(), other.bytes);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.start)) {
        this.start = data().deepCopy(fields()[3].schema(), other.start);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.end)) {
        this.end = data().deepCopy(fields()[4].schema(), other.end);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.version)) {
        this.version = data().deepCopy(fields()[5].schema(), other.version);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.interface_id)) {
        this.interface_id = data().deepCopy(fields()[6].schema(), other.interface_id);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.srcaddr)) {
        this.srcaddr = data().deepCopy(fields()[7].schema(), other.srcaddr);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.dstaddr)) {
        this.dstaddr = data().deepCopy(fields()[8].schema(), other.dstaddr);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.srcport)) {
        this.srcport = data().deepCopy(fields()[9].schema(), other.srcport);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (isValidValue(fields()[10], other.dstport)) {
        this.dstport = data().deepCopy(fields()[10].schema(), other.dstport);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
      if (isValidValue(fields()[11], other.protocol)) {
        this.protocol = data().deepCopy(fields()[11].schema(), other.protocol);
        fieldSetFlags()[11] = other.fieldSetFlags()[11];
      }
      if (isValidValue(fields()[12], other.packets)) {
        this.packets = data().deepCopy(fields()[12].schema(), other.packets);
        fieldSetFlags()[12] = other.fieldSetFlags()[12];
      }
      if (isValidValue(fields()[13], other.action)) {
        this.action = data().deepCopy(fields()[13].schema(), other.action);
        fieldSetFlags()[13] = other.fieldSetFlags()[13];
      }
      if (isValidValue(fields()[14], other.log_status)) {
        this.log_status = data().deepCopy(fields()[14].schema(), other.log_status);
        fieldSetFlags()[14] = other.fieldSetFlags()[14];
      }
      if (isValidValue(fields()[15], other.vpc_id)) {
        this.vpc_id = data().deepCopy(fields()[15].schema(), other.vpc_id);
        fieldSetFlags()[15] = other.fieldSetFlags()[15];
      }
      if (isValidValue(fields()[16], other.subnet_id)) {
        this.subnet_id = data().deepCopy(fields()[16].schema(), other.subnet_id);
        fieldSetFlags()[16] = other.fieldSetFlags()[16];
      }
      if (isValidValue(fields()[17], other.instance_id)) {
        this.instance_id = data().deepCopy(fields()[17].schema(), other.instance_id);
        fieldSetFlags()[17] = other.fieldSetFlags()[17];
      }
      if (isValidValue(fields()[18], other.tcp_flags)) {
        this.tcp_flags = data().deepCopy(fields()[18].schema(), other.tcp_flags);
        fieldSetFlags()[18] = other.fieldSetFlags()[18];
      }
      if (isValidValue(fields()[19], other.type)) {
        this.type = data().deepCopy(fields()[19].schema(), other.type);
        fieldSetFlags()[19] = other.fieldSetFlags()[19];
      }
      if (isValidValue(fields()[20], other.pkt_srcaddr)) {
        this.pkt_srcaddr = data().deepCopy(fields()[20].schema(), other.pkt_srcaddr);
        fieldSetFlags()[20] = other.fieldSetFlags()[20];
      }
      if (isValidValue(fields()[21], other.pkt_dstaddr)) {
        this.pkt_dstaddr = data().deepCopy(fields()[21].schema(), other.pkt_dstaddr);
        fieldSetFlags()[21] = other.fieldSetFlags()[21];
      }
      if (isValidValue(fields()[22], other.meta_s3_file)) {
        this.meta_s3_file = data().deepCopy(fields()[22].schema(), other.meta_s3_file);
        fieldSetFlags()[22] = other.fieldSetFlags()[22];
      }
      if (isValidValue(fields()[23], other.meta_account_no)) {
        this.meta_account_no = data().deepCopy(fields()[23].schema(), other.meta_account_no);
        fieldSetFlags()[23] = other.fieldSetFlags()[23];
      }
      if (isValidValue(fields()[24], other.meta_region)) {
        this.meta_region = data().deepCopy(fields()[24].schema(), other.meta_region);
        fieldSetFlags()[24] = other.fieldSetFlags()[24];
      }
      if (isValidValue(fields()[25], other.meta_account_name)) {
        this.meta_account_name = data().deepCopy(fields()[25].schema(), other.meta_account_name);
        fieldSetFlags()[25] = other.fieldSetFlags()[25];
      }
    }

    /**
     * Creates a Builder by copying an existing EventData instance
     * @param other The existing instance to copy.
     */
    private Builder(com.hackathon.services.kinesisanalytics.EventData other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.account_id)) {
        this.account_id = data().deepCopy(fields()[1].schema(), other.account_id);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.bytes)) {
        this.bytes = data().deepCopy(fields()[2].schema(), other.bytes);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.start)) {
        this.start = data().deepCopy(fields()[3].schema(), other.start);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.end)) {
        this.end = data().deepCopy(fields()[4].schema(), other.end);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.version)) {
        this.version = data().deepCopy(fields()[5].schema(), other.version);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.interface_id)) {
        this.interface_id = data().deepCopy(fields()[6].schema(), other.interface_id);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.srcaddr)) {
        this.srcaddr = data().deepCopy(fields()[7].schema(), other.srcaddr);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.dstaddr)) {
        this.dstaddr = data().deepCopy(fields()[8].schema(), other.dstaddr);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.srcport)) {
        this.srcport = data().deepCopy(fields()[9].schema(), other.srcport);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.dstport)) {
        this.dstport = data().deepCopy(fields()[10].schema(), other.dstport);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.protocol)) {
        this.protocol = data().deepCopy(fields()[11].schema(), other.protocol);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.packets)) {
        this.packets = data().deepCopy(fields()[12].schema(), other.packets);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.action)) {
        this.action = data().deepCopy(fields()[13].schema(), other.action);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.log_status)) {
        this.log_status = data().deepCopy(fields()[14].schema(), other.log_status);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.vpc_id)) {
        this.vpc_id = data().deepCopy(fields()[15].schema(), other.vpc_id);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.subnet_id)) {
        this.subnet_id = data().deepCopy(fields()[16].schema(), other.subnet_id);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.instance_id)) {
        this.instance_id = data().deepCopy(fields()[17].schema(), other.instance_id);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.tcp_flags)) {
        this.tcp_flags = data().deepCopy(fields()[18].schema(), other.tcp_flags);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.type)) {
        this.type = data().deepCopy(fields()[19].schema(), other.type);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.pkt_srcaddr)) {
        this.pkt_srcaddr = data().deepCopy(fields()[20].schema(), other.pkt_srcaddr);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.pkt_dstaddr)) {
        this.pkt_dstaddr = data().deepCopy(fields()[21].schema(), other.pkt_dstaddr);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.meta_s3_file)) {
        this.meta_s3_file = data().deepCopy(fields()[22].schema(), other.meta_s3_file);
        fieldSetFlags()[22] = true;
      }
      if (isValidValue(fields()[23], other.meta_account_no)) {
        this.meta_account_no = data().deepCopy(fields()[23].schema(), other.meta_account_no);
        fieldSetFlags()[23] = true;
      }
      if (isValidValue(fields()[24], other.meta_region)) {
        this.meta_region = data().deepCopy(fields()[24].schema(), other.meta_region);
        fieldSetFlags()[24] = true;
      }
      if (isValidValue(fields()[25], other.meta_account_name)) {
        this.meta_account_name = data().deepCopy(fields()[25].schema(), other.meta_account_name);
        fieldSetFlags()[25] = true;
      }
    }

    /**
      * Gets the value of the 'id' field.
      * @return The value.
      */
    public java.lang.CharSequence getId() {
      return id;
    }


    /**
      * Sets the value of the 'id' field.
      * @param value The value of 'id'.
      * @return This builder.
      */
    public com.hackathon.services.kinesisanalytics.EventData.Builder setId(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'id' field has been set.
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'id' field.
      * @return This builder.
      */
    public com.hackathon.services.kinesisanalytics.EventData.Builder clearId() {
      id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'account_id' field.
      * @return The value.
      */
    public java.lang.CharSequence getAccountId() {
      return account_id;
    }


    /**
      * Sets the value of the 'account_id' field.
      * @param value The value of 'account_id'.
      * @return This builder.
      */
    public com.hackathon.services.kinesisanalytics.EventData.Builder setAccountId(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.account_id = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'account_id' field has been set.
      * @return True if the 'account_id' field has been set, false otherwise.
      */
    public boolean hasAccountId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'account_id' field.
      * @return This builder.
      */
    public com.hackathon.services.kinesisanalytics.EventData.Builder clearAccountId() {
      account_id = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'bytes' field.
      * @return The value.
      */
    public java.lang.Long getBytes() {
      return bytes;
    }


    /**
      * Sets the value of the 'bytes' field.
      * @param value The value of 'bytes'.
      * @return This builder.
      */
    public com.hackathon.services.kinesisanalytics.EventData.Builder setBytes(java.lang.Long value) {
      validate(fields()[2], value);
      this.bytes = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'bytes' field has been set.
      * @return True if the 'bytes' field has been set, false otherwise.
      */
    public boolean hasBytes() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'bytes' field.
      * @return This builder.
      */
    public com.hackathon.services.kinesisanalytics.EventData.Builder clearBytes() {
      bytes = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'start' field.
      * @return The value.
      */
    public int getStart() {
      return start;
    }


    /**
      * Sets the value of the 'start' field.
      * @param value The value of 'start'.
      * @return This builder.
      */
    public com.hackathon.services.kinesisanalytics.EventData.Builder setStart(int value) {
      validate(fields()[3], value);
      this.start = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'start' field has been set.
      * @return True if the 'start' field has been set, false otherwise.
      */
    public boolean hasStart() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'start' field.
      * @return This builder.
      */
    public com.hackathon.services.kinesisanalytics.EventData.Builder clearStart() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'end' field.
      * @return The value.
      */
    public int getEnd() {
      return end;
    }


    /**
      * Sets the value of the 'end' field.
      * @param value The value of 'end'.
      * @return This builder.
      */
    public com.hackathon.services.kinesisanalytics.EventData.Builder setEnd(int value) {
      validate(fields()[4], value);
      this.end = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'end' field has been set.
      * @return True if the 'end' field has been set, false otherwise.
      */
    public boolean hasEnd() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'end' field.
      * @return This builder.
      */
    public com.hackathon.services.kinesisanalytics.EventData.Builder clearEnd() {
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'version' field.
      * @return The value.
      */
    public java.lang.Integer getVersion() {
      return version;
    }


    /**
      * Sets the value of the 'version' field.
      * @param value The value of 'version'.
      * @return This builder.
      */
    public com.hackathon.services.kinesisanalytics.EventData.Builder setVersion(java.lang.Integer value) {
      validate(fields()[5], value);
      this.version = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'version' field has been set.
      * @return True if the 'version' field has been set, false otherwise.
      */
    public boolean hasVersion() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'version' field.
      * @return This builder.
      */
    public com.hackathon.services.kinesisanalytics.EventData.Builder clearVersion() {
      version = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'interface_id' field.
      * @return The value.
      */
    public java.lang.CharSequence getInterfaceId() {
      return interface_id;
    }


    /**
      * Sets the value of the 'interface_id' field.
      * @param value The value of 'interface_id'.
      * @return This builder.
      */
    public com.hackathon.services.kinesisanalytics.EventData.Builder setInterfaceId(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.interface_id = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'interface_id' field has been set.
      * @return True if the 'interface_id' field has been set, false otherwise.
      */
    public boolean hasInterfaceId() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'interface_id' field.
      * @return This builder.
      */
    public com.hackathon.services.kinesisanalytics.EventData.Builder clearInterfaceId() {
      interface_id = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'srcaddr' field.
      * @return The value.
      */
    public java.lang.CharSequence getSrcaddr() {
      return srcaddr;
    }


    /**
      * Sets the value of the 'srcaddr' field.
      * @param value The value of 'srcaddr'.
      * @return This builder.
      */
    public com.hackathon.services.kinesisanalytics.EventData.Builder setSrcaddr(java.lang.CharSequence value) {
      validate(fields()[7], value);
      this.srcaddr = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'srcaddr' field has been set.
      * @return True if the 'srcaddr' field has been set, false otherwise.
      */
    public boolean hasSrcaddr() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'srcaddr' field.
      * @return This builder.
      */
    public com.hackathon.services.kinesisanalytics.EventData.Builder clearSrcaddr() {
      srcaddr = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'dstaddr' field.
      * @return The value.
      */
    public java.lang.CharSequence getDstaddr() {
      return dstaddr;
    }


    /**
      * Sets the value of the 'dstaddr' field.
      * @param value The value of 'dstaddr'.
      * @return This builder.
      */
    public com.hackathon.services.kinesisanalytics.EventData.Builder setDstaddr(java.lang.CharSequence value) {
      validate(fields()[8], value);
      this.dstaddr = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'dstaddr' field has been set.
      * @return True if the 'dstaddr' field has been set, false otherwise.
      */
    public boolean hasDstaddr() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'dstaddr' field.
      * @return This builder.
      */
    public com.hackathon.services.kinesisanalytics.EventData.Builder clearDstaddr() {
      dstaddr = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'srcport' field.
      * @return The value.
      */
    public java.lang.CharSequence getSrcport() {
      return srcport;
    }


    /**
      * Sets the value of the 'srcport' field.
      * @param value The value of 'srcport'.
      * @return This builder.
      */
    public com.hackathon.services.kinesisanalytics.EventData.Builder setSrcport(java.lang.CharSequence value) {
      validate(fields()[9], value);
      this.srcport = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'srcport' field has been set.
      * @return True if the 'srcport' field has been set, false otherwise.
      */
    public boolean hasSrcport() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'srcport' field.
      * @return This builder.
      */
    public com.hackathon.services.kinesisanalytics.EventData.Builder clearSrcport() {
      srcport = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'dstport' field.
      * @return The value.
      */
    public java.lang.CharSequence getDstport() {
      return dstport;
    }


    /**
      * Sets the value of the 'dstport' field.
      * @param value The value of 'dstport'.
      * @return This builder.
      */
    public com.hackathon.services.kinesisanalytics.EventData.Builder setDstport(java.lang.CharSequence value) {
      validate(fields()[10], value);
      this.dstport = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'dstport' field has been set.
      * @return True if the 'dstport' field has been set, false otherwise.
      */
    public boolean hasDstport() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'dstport' field.
      * @return This builder.
      */
    public com.hackathon.services.kinesisanalytics.EventData.Builder clearDstport() {
      dstport = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'protocol' field.
      * @return The value.
      */
    public java.lang.Integer getProtocol() {
      return protocol;
    }


    /**
      * Sets the value of the 'protocol' field.
      * @param value The value of 'protocol'.
      * @return This builder.
      */
    public com.hackathon.services.kinesisanalytics.EventData.Builder setProtocol(java.lang.Integer value) {
      validate(fields()[11], value);
      this.protocol = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'protocol' field has been set.
      * @return True if the 'protocol' field has been set, false otherwise.
      */
    public boolean hasProtocol() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'protocol' field.
      * @return This builder.
      */
    public com.hackathon.services.kinesisanalytics.EventData.Builder clearProtocol() {
      protocol = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'packets' field.
      * @return The value.
      */
    public java.lang.Integer getPackets() {
      return packets;
    }


    /**
      * Sets the value of the 'packets' field.
      * @param value The value of 'packets'.
      * @return This builder.
      */
    public com.hackathon.services.kinesisanalytics.EventData.Builder setPackets(java.lang.Integer value) {
      validate(fields()[12], value);
      this.packets = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'packets' field has been set.
      * @return True if the 'packets' field has been set, false otherwise.
      */
    public boolean hasPackets() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'packets' field.
      * @return This builder.
      */
    public com.hackathon.services.kinesisanalytics.EventData.Builder clearPackets() {
      packets = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'action' field.
      * @return The value.
      */
    public java.lang.CharSequence getAction() {
      return action;
    }


    /**
      * Sets the value of the 'action' field.
      * @param value The value of 'action'.
      * @return This builder.
      */
    public com.hackathon.services.kinesisanalytics.EventData.Builder setAction(java.lang.CharSequence value) {
      validate(fields()[13], value);
      this.action = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'action' field has been set.
      * @return True if the 'action' field has been set, false otherwise.
      */
    public boolean hasAction() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'action' field.
      * @return This builder.
      */
    public com.hackathon.services.kinesisanalytics.EventData.Builder clearAction() {
      action = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'log_status' field.
      * @return The value.
      */
    public java.lang.CharSequence getLogStatus() {
      return log_status;
    }


    /**
      * Sets the value of the 'log_status' field.
      * @param value The value of 'log_status'.
      * @return This builder.
      */
    public com.hackathon.services.kinesisanalytics.EventData.Builder setLogStatus(java.lang.CharSequence value) {
      validate(fields()[14], value);
      this.log_status = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'log_status' field has been set.
      * @return True if the 'log_status' field has been set, false otherwise.
      */
    public boolean hasLogStatus() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'log_status' field.
      * @return This builder.
      */
    public com.hackathon.services.kinesisanalytics.EventData.Builder clearLogStatus() {
      log_status = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'vpc_id' field.
      * @return The value.
      */
    public java.lang.CharSequence getVpcId() {
      return vpc_id;
    }


    /**
      * Sets the value of the 'vpc_id' field.
      * @param value The value of 'vpc_id'.
      * @return This builder.
      */
    public com.hackathon.services.kinesisanalytics.EventData.Builder setVpcId(java.lang.CharSequence value) {
      validate(fields()[15], value);
      this.vpc_id = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
      * Checks whether the 'vpc_id' field has been set.
      * @return True if the 'vpc_id' field has been set, false otherwise.
      */
    public boolean hasVpcId() {
      return fieldSetFlags()[15];
    }


    /**
      * Clears the value of the 'vpc_id' field.
      * @return This builder.
      */
    public com.hackathon.services.kinesisanalytics.EventData.Builder clearVpcId() {
      vpc_id = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /**
      * Gets the value of the 'subnet_id' field.
      * @return The value.
      */
    public java.lang.CharSequence getSubnetId() {
      return subnet_id;
    }


    /**
      * Sets the value of the 'subnet_id' field.
      * @param value The value of 'subnet_id'.
      * @return This builder.
      */
    public com.hackathon.services.kinesisanalytics.EventData.Builder setSubnetId(java.lang.CharSequence value) {
      validate(fields()[16], value);
      this.subnet_id = value;
      fieldSetFlags()[16] = true;
      return this;
    }

    /**
      * Checks whether the 'subnet_id' field has been set.
      * @return True if the 'subnet_id' field has been set, false otherwise.
      */
    public boolean hasSubnetId() {
      return fieldSetFlags()[16];
    }


    /**
      * Clears the value of the 'subnet_id' field.
      * @return This builder.
      */
    public com.hackathon.services.kinesisanalytics.EventData.Builder clearSubnetId() {
      subnet_id = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    /**
      * Gets the value of the 'instance_id' field.
      * @return The value.
      */
    public java.lang.CharSequence getInstanceId() {
      return instance_id;
    }


    /**
      * Sets the value of the 'instance_id' field.
      * @param value The value of 'instance_id'.
      * @return This builder.
      */
    public com.hackathon.services.kinesisanalytics.EventData.Builder setInstanceId(java.lang.CharSequence value) {
      validate(fields()[17], value);
      this.instance_id = value;
      fieldSetFlags()[17] = true;
      return this;
    }

    /**
      * Checks whether the 'instance_id' field has been set.
      * @return True if the 'instance_id' field has been set, false otherwise.
      */
    public boolean hasInstanceId() {
      return fieldSetFlags()[17];
    }


    /**
      * Clears the value of the 'instance_id' field.
      * @return This builder.
      */
    public com.hackathon.services.kinesisanalytics.EventData.Builder clearInstanceId() {
      instance_id = null;
      fieldSetFlags()[17] = false;
      return this;
    }

    /**
      * Gets the value of the 'tcp_flags' field.
      * @return The value.
      */
    public java.lang.Integer getTcpFlags() {
      return tcp_flags;
    }


    /**
      * Sets the value of the 'tcp_flags' field.
      * @param value The value of 'tcp_flags'.
      * @return This builder.
      */
    public com.hackathon.services.kinesisanalytics.EventData.Builder setTcpFlags(java.lang.Integer value) {
      validate(fields()[18], value);
      this.tcp_flags = value;
      fieldSetFlags()[18] = true;
      return this;
    }

    /**
      * Checks whether the 'tcp_flags' field has been set.
      * @return True if the 'tcp_flags' field has been set, false otherwise.
      */
    public boolean hasTcpFlags() {
      return fieldSetFlags()[18];
    }


    /**
      * Clears the value of the 'tcp_flags' field.
      * @return This builder.
      */
    public com.hackathon.services.kinesisanalytics.EventData.Builder clearTcpFlags() {
      tcp_flags = null;
      fieldSetFlags()[18] = false;
      return this;
    }

    /**
      * Gets the value of the 'type' field.
      * @return The value.
      */
    public java.lang.CharSequence getType() {
      return type;
    }


    /**
      * Sets the value of the 'type' field.
      * @param value The value of 'type'.
      * @return This builder.
      */
    public com.hackathon.services.kinesisanalytics.EventData.Builder setType(java.lang.CharSequence value) {
      validate(fields()[19], value);
      this.type = value;
      fieldSetFlags()[19] = true;
      return this;
    }

    /**
      * Checks whether the 'type' field has been set.
      * @return True if the 'type' field has been set, false otherwise.
      */
    public boolean hasType() {
      return fieldSetFlags()[19];
    }


    /**
      * Clears the value of the 'type' field.
      * @return This builder.
      */
    public com.hackathon.services.kinesisanalytics.EventData.Builder clearType() {
      type = null;
      fieldSetFlags()[19] = false;
      return this;
    }

    /**
      * Gets the value of the 'pkt_srcaddr' field.
      * @return The value.
      */
    public java.lang.CharSequence getPktSrcaddr() {
      return pkt_srcaddr;
    }


    /**
      * Sets the value of the 'pkt_srcaddr' field.
      * @param value The value of 'pkt_srcaddr'.
      * @return This builder.
      */
    public com.hackathon.services.kinesisanalytics.EventData.Builder setPktSrcaddr(java.lang.CharSequence value) {
      validate(fields()[20], value);
      this.pkt_srcaddr = value;
      fieldSetFlags()[20] = true;
      return this;
    }

    /**
      * Checks whether the 'pkt_srcaddr' field has been set.
      * @return True if the 'pkt_srcaddr' field has been set, false otherwise.
      */
    public boolean hasPktSrcaddr() {
      return fieldSetFlags()[20];
    }


    /**
      * Clears the value of the 'pkt_srcaddr' field.
      * @return This builder.
      */
    public com.hackathon.services.kinesisanalytics.EventData.Builder clearPktSrcaddr() {
      pkt_srcaddr = null;
      fieldSetFlags()[20] = false;
      return this;
    }

    /**
      * Gets the value of the 'pkt_dstaddr' field.
      * @return The value.
      */
    public java.lang.CharSequence getPktDstaddr() {
      return pkt_dstaddr;
    }


    /**
      * Sets the value of the 'pkt_dstaddr' field.
      * @param value The value of 'pkt_dstaddr'.
      * @return This builder.
      */
    public com.hackathon.services.kinesisanalytics.EventData.Builder setPktDstaddr(java.lang.CharSequence value) {
      validate(fields()[21], value);
      this.pkt_dstaddr = value;
      fieldSetFlags()[21] = true;
      return this;
    }

    /**
      * Checks whether the 'pkt_dstaddr' field has been set.
      * @return True if the 'pkt_dstaddr' field has been set, false otherwise.
      */
    public boolean hasPktDstaddr() {
      return fieldSetFlags()[21];
    }


    /**
      * Clears the value of the 'pkt_dstaddr' field.
      * @return This builder.
      */
    public com.hackathon.services.kinesisanalytics.EventData.Builder clearPktDstaddr() {
      pkt_dstaddr = null;
      fieldSetFlags()[21] = false;
      return this;
    }

    /**
      * Gets the value of the 'meta_s3_file' field.
      * @return The value.
      */
    public java.lang.CharSequence getMetaS3File() {
      return meta_s3_file;
    }


    /**
      * Sets the value of the 'meta_s3_file' field.
      * @param value The value of 'meta_s3_file'.
      * @return This builder.
      */
    public com.hackathon.services.kinesisanalytics.EventData.Builder setMetaS3File(java.lang.CharSequence value) {
      validate(fields()[22], value);
      this.meta_s3_file = value;
      fieldSetFlags()[22] = true;
      return this;
    }

    /**
      * Checks whether the 'meta_s3_file' field has been set.
      * @return True if the 'meta_s3_file' field has been set, false otherwise.
      */
    public boolean hasMetaS3File() {
      return fieldSetFlags()[22];
    }


    /**
      * Clears the value of the 'meta_s3_file' field.
      * @return This builder.
      */
    public com.hackathon.services.kinesisanalytics.EventData.Builder clearMetaS3File() {
      meta_s3_file = null;
      fieldSetFlags()[22] = false;
      return this;
    }

    /**
      * Gets the value of the 'meta_account_no' field.
      * @return The value.
      */
    public java.lang.CharSequence getMetaAccountNo() {
      return meta_account_no;
    }


    /**
      * Sets the value of the 'meta_account_no' field.
      * @param value The value of 'meta_account_no'.
      * @return This builder.
      */
    public com.hackathon.services.kinesisanalytics.EventData.Builder setMetaAccountNo(java.lang.CharSequence value) {
      validate(fields()[23], value);
      this.meta_account_no = value;
      fieldSetFlags()[23] = true;
      return this;
    }

    /**
      * Checks whether the 'meta_account_no' field has been set.
      * @return True if the 'meta_account_no' field has been set, false otherwise.
      */
    public boolean hasMetaAccountNo() {
      return fieldSetFlags()[23];
    }


    /**
      * Clears the value of the 'meta_account_no' field.
      * @return This builder.
      */
    public com.hackathon.services.kinesisanalytics.EventData.Builder clearMetaAccountNo() {
      meta_account_no = null;
      fieldSetFlags()[23] = false;
      return this;
    }

    /**
      * Gets the value of the 'meta_region' field.
      * @return The value.
      */
    public java.lang.CharSequence getMetaRegion() {
      return meta_region;
    }


    /**
      * Sets the value of the 'meta_region' field.
      * @param value The value of 'meta_region'.
      * @return This builder.
      */
    public com.hackathon.services.kinesisanalytics.EventData.Builder setMetaRegion(java.lang.CharSequence value) {
      validate(fields()[24], value);
      this.meta_region = value;
      fieldSetFlags()[24] = true;
      return this;
    }

    /**
      * Checks whether the 'meta_region' field has been set.
      * @return True if the 'meta_region' field has been set, false otherwise.
      */
    public boolean hasMetaRegion() {
      return fieldSetFlags()[24];
    }


    /**
      * Clears the value of the 'meta_region' field.
      * @return This builder.
      */
    public com.hackathon.services.kinesisanalytics.EventData.Builder clearMetaRegion() {
      meta_region = null;
      fieldSetFlags()[24] = false;
      return this;
    }

    /**
      * Gets the value of the 'meta_account_name' field.
      * @return The value.
      */
    public java.lang.CharSequence getMetaAccountName() {
      return meta_account_name;
    }


    /**
      * Sets the value of the 'meta_account_name' field.
      * @param value The value of 'meta_account_name'.
      * @return This builder.
      */
    public com.hackathon.services.kinesisanalytics.EventData.Builder setMetaAccountName(java.lang.CharSequence value) {
      validate(fields()[25], value);
      this.meta_account_name = value;
      fieldSetFlags()[25] = true;
      return this;
    }

    /**
      * Checks whether the 'meta_account_name' field has been set.
      * @return True if the 'meta_account_name' field has been set, false otherwise.
      */
    public boolean hasMetaAccountName() {
      return fieldSetFlags()[25];
    }


    /**
      * Clears the value of the 'meta_account_name' field.
      * @return This builder.
      */
    public com.hackathon.services.kinesisanalytics.EventData.Builder clearMetaAccountName() {
      meta_account_name = null;
      fieldSetFlags()[25] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public EventData build() {
      try {
        EventData record = new EventData();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.account_id = fieldSetFlags()[1] ? this.account_id : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.bytes = fieldSetFlags()[2] ? this.bytes : (java.lang.Long) defaultValue(fields()[2]);
        record.start = fieldSetFlags()[3] ? this.start : (java.lang.Integer) defaultValue(fields()[3]);
        record.end = fieldSetFlags()[4] ? this.end : (java.lang.Integer) defaultValue(fields()[4]);
        record.version = fieldSetFlags()[5] ? this.version : (java.lang.Integer) defaultValue(fields()[5]);
        record.interface_id = fieldSetFlags()[6] ? this.interface_id : (java.lang.CharSequence) defaultValue(fields()[6]);
        record.srcaddr = fieldSetFlags()[7] ? this.srcaddr : (java.lang.CharSequence) defaultValue(fields()[7]);
        record.dstaddr = fieldSetFlags()[8] ? this.dstaddr : (java.lang.CharSequence) defaultValue(fields()[8]);
        record.srcport = fieldSetFlags()[9] ? this.srcport : (java.lang.CharSequence) defaultValue(fields()[9]);
        record.dstport = fieldSetFlags()[10] ? this.dstport : (java.lang.CharSequence) defaultValue(fields()[10]);
        record.protocol = fieldSetFlags()[11] ? this.protocol : (java.lang.Integer) defaultValue(fields()[11]);
        record.packets = fieldSetFlags()[12] ? this.packets : (java.lang.Integer) defaultValue(fields()[12]);
        record.action = fieldSetFlags()[13] ? this.action : (java.lang.CharSequence) defaultValue(fields()[13]);
        record.log_status = fieldSetFlags()[14] ? this.log_status : (java.lang.CharSequence) defaultValue(fields()[14]);
        record.vpc_id = fieldSetFlags()[15] ? this.vpc_id : (java.lang.CharSequence) defaultValue(fields()[15]);
        record.subnet_id = fieldSetFlags()[16] ? this.subnet_id : (java.lang.CharSequence) defaultValue(fields()[16]);
        record.instance_id = fieldSetFlags()[17] ? this.instance_id : (java.lang.CharSequence) defaultValue(fields()[17]);
        record.tcp_flags = fieldSetFlags()[18] ? this.tcp_flags : (java.lang.Integer) defaultValue(fields()[18]);
        record.type = fieldSetFlags()[19] ? this.type : (java.lang.CharSequence) defaultValue(fields()[19]);
        record.pkt_srcaddr = fieldSetFlags()[20] ? this.pkt_srcaddr : (java.lang.CharSequence) defaultValue(fields()[20]);
        record.pkt_dstaddr = fieldSetFlags()[21] ? this.pkt_dstaddr : (java.lang.CharSequence) defaultValue(fields()[21]);
        record.meta_s3_file = fieldSetFlags()[22] ? this.meta_s3_file : (java.lang.CharSequence) defaultValue(fields()[22]);
        record.meta_account_no = fieldSetFlags()[23] ? this.meta_account_no : (java.lang.CharSequence) defaultValue(fields()[23]);
        record.meta_region = fieldSetFlags()[24] ? this.meta_region : (java.lang.CharSequence) defaultValue(fields()[24]);
        record.meta_account_name = fieldSetFlags()[25] ? this.meta_account_name : (java.lang.CharSequence) defaultValue(fields()[25]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<EventData>
    WRITER$ = (org.apache.avro.io.DatumWriter<EventData>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<EventData>
    READER$ = (org.apache.avro.io.DatumReader<EventData>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    if (this.id == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeString(this.id);
    }

    if (this.account_id == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeString(this.account_id);
    }

    if (this.bytes == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeLong(this.bytes);
    }

    out.writeInt(this.start);

    out.writeInt(this.end);

    if (this.version == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeInt(this.version);
    }

    if (this.interface_id == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeString(this.interface_id);
    }

    if (this.srcaddr == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeString(this.srcaddr);
    }

    if (this.dstaddr == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeString(this.dstaddr);
    }

    if (this.srcport == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeString(this.srcport);
    }

    if (this.dstport == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeString(this.dstport);
    }

    if (this.protocol == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeInt(this.protocol);
    }

    if (this.packets == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeInt(this.packets);
    }

    if (this.action == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeString(this.action);
    }

    if (this.log_status == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeString(this.log_status);
    }

    if (this.vpc_id == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeString(this.vpc_id);
    }

    if (this.subnet_id == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeString(this.subnet_id);
    }

    if (this.instance_id == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeString(this.instance_id);
    }

    if (this.tcp_flags == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeInt(this.tcp_flags);
    }

    if (this.type == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeString(this.type);
    }

    if (this.pkt_srcaddr == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeString(this.pkt_srcaddr);
    }

    if (this.pkt_dstaddr == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeString(this.pkt_dstaddr);
    }

    if (this.meta_s3_file == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeString(this.meta_s3_file);
    }

    if (this.meta_account_no == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeString(this.meta_account_no);
    }

    if (this.meta_region == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeString(this.meta_region);
    }

    if (this.meta_account_name == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeString(this.meta_account_name);
    }

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      if (in.readIndex() != 0) {
        in.readNull();
        this.id = null;
      } else {
        this.id = in.readString(this.id instanceof Utf8 ? (Utf8)this.id : null);
      }

      if (in.readIndex() != 0) {
        in.readNull();
        this.account_id = null;
      } else {
        this.account_id = in.readString(this.account_id instanceof Utf8 ? (Utf8)this.account_id : null);
      }

      if (in.readIndex() != 0) {
        in.readNull();
        this.bytes = null;
      } else {
        this.bytes = in.readLong();
      }

      this.start = in.readInt();

      this.end = in.readInt();

      if (in.readIndex() != 0) {
        in.readNull();
        this.version = null;
      } else {
        this.version = in.readInt();
      }

      if (in.readIndex() != 0) {
        in.readNull();
        this.interface_id = null;
      } else {
        this.interface_id = in.readString(this.interface_id instanceof Utf8 ? (Utf8)this.interface_id : null);
      }

      if (in.readIndex() != 0) {
        in.readNull();
        this.srcaddr = null;
      } else {
        this.srcaddr = in.readString(this.srcaddr instanceof Utf8 ? (Utf8)this.srcaddr : null);
      }

      if (in.readIndex() != 0) {
        in.readNull();
        this.dstaddr = null;
      } else {
        this.dstaddr = in.readString(this.dstaddr instanceof Utf8 ? (Utf8)this.dstaddr : null);
      }

      if (in.readIndex() != 0) {
        in.readNull();
        this.srcport = null;
      } else {
        this.srcport = in.readString(this.srcport instanceof Utf8 ? (Utf8)this.srcport : null);
      }

      if (in.readIndex() != 0) {
        in.readNull();
        this.dstport = null;
      } else {
        this.dstport = in.readString(this.dstport instanceof Utf8 ? (Utf8)this.dstport : null);
      }

      if (in.readIndex() != 0) {
        in.readNull();
        this.protocol = null;
      } else {
        this.protocol = in.readInt();
      }

      if (in.readIndex() != 0) {
        in.readNull();
        this.packets = null;
      } else {
        this.packets = in.readInt();
      }

      if (in.readIndex() != 0) {
        in.readNull();
        this.action = null;
      } else {
        this.action = in.readString(this.action instanceof Utf8 ? (Utf8)this.action : null);
      }

      if (in.readIndex() != 0) {
        in.readNull();
        this.log_status = null;
      } else {
        this.log_status = in.readString(this.log_status instanceof Utf8 ? (Utf8)this.log_status : null);
      }

      if (in.readIndex() != 0) {
        in.readNull();
        this.vpc_id = null;
      } else {
        this.vpc_id = in.readString(this.vpc_id instanceof Utf8 ? (Utf8)this.vpc_id : null);
      }

      if (in.readIndex() != 0) {
        in.readNull();
        this.subnet_id = null;
      } else {
        this.subnet_id = in.readString(this.subnet_id instanceof Utf8 ? (Utf8)this.subnet_id : null);
      }

      if (in.readIndex() != 0) {
        in.readNull();
        this.instance_id = null;
      } else {
        this.instance_id = in.readString(this.instance_id instanceof Utf8 ? (Utf8)this.instance_id : null);
      }

      if (in.readIndex() != 0) {
        in.readNull();
        this.tcp_flags = null;
      } else {
        this.tcp_flags = in.readInt();
      }

      if (in.readIndex() != 0) {
        in.readNull();
        this.type = null;
      } else {
        this.type = in.readString(this.type instanceof Utf8 ? (Utf8)this.type : null);
      }

      if (in.readIndex() != 0) {
        in.readNull();
        this.pkt_srcaddr = null;
      } else {
        this.pkt_srcaddr = in.readString(this.pkt_srcaddr instanceof Utf8 ? (Utf8)this.pkt_srcaddr : null);
      }

      if (in.readIndex() != 0) {
        in.readNull();
        this.pkt_dstaddr = null;
      } else {
        this.pkt_dstaddr = in.readString(this.pkt_dstaddr instanceof Utf8 ? (Utf8)this.pkt_dstaddr : null);
      }

      if (in.readIndex() != 0) {
        in.readNull();
        this.meta_s3_file = null;
      } else {
        this.meta_s3_file = in.readString(this.meta_s3_file instanceof Utf8 ? (Utf8)this.meta_s3_file : null);
      }

      if (in.readIndex() != 0) {
        in.readNull();
        this.meta_account_no = null;
      } else {
        this.meta_account_no = in.readString(this.meta_account_no instanceof Utf8 ? (Utf8)this.meta_account_no : null);
      }

      if (in.readIndex() != 0) {
        in.readNull();
        this.meta_region = null;
      } else {
        this.meta_region = in.readString(this.meta_region instanceof Utf8 ? (Utf8)this.meta_region : null);
      }

      if (in.readIndex() != 0) {
        in.readNull();
        this.meta_account_name = null;
      } else {
        this.meta_account_name = in.readString(this.meta_account_name instanceof Utf8 ? (Utf8)this.meta_account_name : null);
      }

    } else {
      for (int i = 0; i < 26; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          if (in.readIndex() != 0) {
            in.readNull();
            this.id = null;
          } else {
            this.id = in.readString(this.id instanceof Utf8 ? (Utf8)this.id : null);
          }
          break;

        case 1:
          if (in.readIndex() != 0) {
            in.readNull();
            this.account_id = null;
          } else {
            this.account_id = in.readString(this.account_id instanceof Utf8 ? (Utf8)this.account_id : null);
          }
          break;

        case 2:
          if (in.readIndex() != 0) {
            in.readNull();
            this.bytes = null;
          } else {
            this.bytes = in.readLong();
          }
          break;

        case 3:
          this.start = in.readInt();
          break;

        case 4:
          this.end = in.readInt();
          break;

        case 5:
          if (in.readIndex() != 0) {
            in.readNull();
            this.version = null;
          } else {
            this.version = in.readInt();
          }
          break;

        case 6:
          if (in.readIndex() != 0) {
            in.readNull();
            this.interface_id = null;
          } else {
            this.interface_id = in.readString(this.interface_id instanceof Utf8 ? (Utf8)this.interface_id : null);
          }
          break;

        case 7:
          if (in.readIndex() != 0) {
            in.readNull();
            this.srcaddr = null;
          } else {
            this.srcaddr = in.readString(this.srcaddr instanceof Utf8 ? (Utf8)this.srcaddr : null);
          }
          break;

        case 8:
          if (in.readIndex() != 0) {
            in.readNull();
            this.dstaddr = null;
          } else {
            this.dstaddr = in.readString(this.dstaddr instanceof Utf8 ? (Utf8)this.dstaddr : null);
          }
          break;

        case 9:
          if (in.readIndex() != 0) {
            in.readNull();
            this.srcport = null;
          } else {
            this.srcport = in.readString(this.srcport instanceof Utf8 ? (Utf8)this.srcport : null);
          }
          break;

        case 10:
          if (in.readIndex() != 0) {
            in.readNull();
            this.dstport = null;
          } else {
            this.dstport = in.readString(this.dstport instanceof Utf8 ? (Utf8)this.dstport : null);
          }
          break;

        case 11:
          if (in.readIndex() != 0) {
            in.readNull();
            this.protocol = null;
          } else {
            this.protocol = in.readInt();
          }
          break;

        case 12:
          if (in.readIndex() != 0) {
            in.readNull();
            this.packets = null;
          } else {
            this.packets = in.readInt();
          }
          break;

        case 13:
          if (in.readIndex() != 0) {
            in.readNull();
            this.action = null;
          } else {
            this.action = in.readString(this.action instanceof Utf8 ? (Utf8)this.action : null);
          }
          break;

        case 14:
          if (in.readIndex() != 0) {
            in.readNull();
            this.log_status = null;
          } else {
            this.log_status = in.readString(this.log_status instanceof Utf8 ? (Utf8)this.log_status : null);
          }
          break;

        case 15:
          if (in.readIndex() != 0) {
            in.readNull();
            this.vpc_id = null;
          } else {
            this.vpc_id = in.readString(this.vpc_id instanceof Utf8 ? (Utf8)this.vpc_id : null);
          }
          break;

        case 16:
          if (in.readIndex() != 0) {
            in.readNull();
            this.subnet_id = null;
          } else {
            this.subnet_id = in.readString(this.subnet_id instanceof Utf8 ? (Utf8)this.subnet_id : null);
          }
          break;

        case 17:
          if (in.readIndex() != 0) {
            in.readNull();
            this.instance_id = null;
          } else {
            this.instance_id = in.readString(this.instance_id instanceof Utf8 ? (Utf8)this.instance_id : null);
          }
          break;

        case 18:
          if (in.readIndex() != 0) {
            in.readNull();
            this.tcp_flags = null;
          } else {
            this.tcp_flags = in.readInt();
          }
          break;

        case 19:
          if (in.readIndex() != 0) {
            in.readNull();
            this.type = null;
          } else {
            this.type = in.readString(this.type instanceof Utf8 ? (Utf8)this.type : null);
          }
          break;

        case 20:
          if (in.readIndex() != 0) {
            in.readNull();
            this.pkt_srcaddr = null;
          } else {
            this.pkt_srcaddr = in.readString(this.pkt_srcaddr instanceof Utf8 ? (Utf8)this.pkt_srcaddr : null);
          }
          break;

        case 21:
          if (in.readIndex() != 0) {
            in.readNull();
            this.pkt_dstaddr = null;
          } else {
            this.pkt_dstaddr = in.readString(this.pkt_dstaddr instanceof Utf8 ? (Utf8)this.pkt_dstaddr : null);
          }
          break;

        case 22:
          if (in.readIndex() != 0) {
            in.readNull();
            this.meta_s3_file = null;
          } else {
            this.meta_s3_file = in.readString(this.meta_s3_file instanceof Utf8 ? (Utf8)this.meta_s3_file : null);
          }
          break;

        case 23:
          if (in.readIndex() != 0) {
            in.readNull();
            this.meta_account_no = null;
          } else {
            this.meta_account_no = in.readString(this.meta_account_no instanceof Utf8 ? (Utf8)this.meta_account_no : null);
          }
          break;

        case 24:
          if (in.readIndex() != 0) {
            in.readNull();
            this.meta_region = null;
          } else {
            this.meta_region = in.readString(this.meta_region instanceof Utf8 ? (Utf8)this.meta_region : null);
          }
          break;

        case 25:
          if (in.readIndex() != 0) {
            in.readNull();
            this.meta_account_name = null;
          } else {
            this.meta_account_name = in.readString(this.meta_account_name instanceof Utf8 ? (Utf8)this.meta_account_name : null);
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










